imports:
    - { resource: config.yml }

framework:
    router:
        resource: "%kernel.root_dir%/config/routing_dev.yml"
        strict_requirements: true
    profiler: { only_exceptions: false }

web_profiler:
    toolbar: "%debug_toolbar%"
    intercept_redirects: "%debug_redirects%"

monolog:
    handlers:
        main:
            type:   stream
            path:   "%kernel.logs_dir%/%kernel.environment%.log"
            level:  debug
        console:
            type:   console
            bubble: false
        # uncomment to get logging in your browser
        # you may have to allow bigger header sizes in your Web server configuration
        firephp:
            type:   firephp
            level:  info
        chromephp:
            type:   chromephp
            level:  info

assetic:
    use_controller: "%use_assetic_controller%"

#swiftmailer:
#    delivery_address: me@example.com

sensio_framework_extra:
    view: { annotations: false }
    router: { annotations: true }
    request: { converters: true }

fos_rest:
    param_fetcher_listener: true
    view:
        view_response_listener: 'force'
        formats:
            xml:  true
            json: true
        templating_formats:
            html: false
    format_listener:
        rules:
            - { path: ^/, priorities: [ html, json, xml ], fallback_format: ~, prefer_extension: true }
    exception:
        codes:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': 404
            'Doctrine\ORM\OptimisticLockException': HTTP_CONFLICT
        messages:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': true
    allowed_methods_listener: true
    access_denied_listener:
        json: true
    body_listener: true
    disable_csrf_role: IS_AUTHENTICATED_ANONYMOUSLY

nelmio_api_doc:
    name: API

services:
    my.listener:
        class: It121\AddressBundle\EventListener\PafPostcodeListener
        calls:
            - [ setPostcodeIoAPIService, [@service_container]]
        tags:
            - { name: doctrine.event_listener, event: onFlush, method: onFlush, connection: uk_postcodes }